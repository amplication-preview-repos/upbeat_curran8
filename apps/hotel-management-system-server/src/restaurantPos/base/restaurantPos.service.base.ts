/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RestaurantPos as PrismaRestaurantPos } from "@prisma/client";

export class RestaurantPosServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RestaurantPosCountArgs, "select">
  ): Promise<number> {
    return this.prisma.restaurantPos.count(args);
  }

  async restaurantPosItems(
    args: Prisma.RestaurantPosFindManyArgs
  ): Promise<PrismaRestaurantPos[]> {
    return this.prisma.restaurantPos.findMany(args);
  }
  async restaurantPos(
    args: Prisma.RestaurantPosFindUniqueArgs
  ): Promise<PrismaRestaurantPos | null> {
    return this.prisma.restaurantPos.findUnique(args);
  }
  async createRestaurantPos(
    args: Prisma.RestaurantPosCreateArgs
  ): Promise<PrismaRestaurantPos> {
    return this.prisma.restaurantPos.create(args);
  }
  async updateRestaurantPos(
    args: Prisma.RestaurantPosUpdateArgs
  ): Promise<PrismaRestaurantPos> {
    return this.prisma.restaurantPos.update(args);
  }
  async deleteRestaurantPos(
    args: Prisma.RestaurantPosDeleteArgs
  ): Promise<PrismaRestaurantPos> {
    return this.prisma.restaurantPos.delete(args);
  }
}
