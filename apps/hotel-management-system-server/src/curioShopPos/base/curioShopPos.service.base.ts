/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CurioShopPos as PrismaCurioShopPos } from "@prisma/client";

export class CurioShopPosServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CurioShopPosCountArgs, "select">
  ): Promise<number> {
    return this.prisma.curioShopPos.count(args);
  }

  async curioShopPosItems(
    args: Prisma.CurioShopPosFindManyArgs
  ): Promise<PrismaCurioShopPos[]> {
    return this.prisma.curioShopPos.findMany(args);
  }
  async curioShopPos(
    args: Prisma.CurioShopPosFindUniqueArgs
  ): Promise<PrismaCurioShopPos | null> {
    return this.prisma.curioShopPos.findUnique(args);
  }
  async createCurioShopPos(
    args: Prisma.CurioShopPosCreateArgs
  ): Promise<PrismaCurioShopPos> {
    return this.prisma.curioShopPos.create(args);
  }
  async updateCurioShopPos(
    args: Prisma.CurioShopPosUpdateArgs
  ): Promise<PrismaCurioShopPos> {
    return this.prisma.curioShopPos.update(args);
  }
  async deleteCurioShopPos(
    args: Prisma.CurioShopPosDeleteArgs
  ): Promise<PrismaCurioShopPos> {
    return this.prisma.curioShopPos.delete(args);
  }
}
